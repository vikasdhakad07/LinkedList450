Method:Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

class Solution{
    Node divide(int N, Node head){
        // code here
         if(head == null || head.next == null) return head;
        Node oddNode = new Node(-1);
        Node evenNode = new Node(-1);
        Node oddTail = oddNode;
        Node evenTail = evenNode;
        
        while(head!=null){
            if(head.data%2==0){
                evenTail.next = head;
                evenTail = evenTail.next;
            }else{
                oddTail.next = head;
                oddTail = oddTail.next;
            }
            head = head.next;
        }
        oddTail.next = null;  //V IMP
        evenTail.next = oddNode.next;
        return evenNode.next;
    }
}
